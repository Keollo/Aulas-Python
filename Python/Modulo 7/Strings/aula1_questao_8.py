# -*- coding: utf-8 -*-
"""aula1_questao 8

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1_KVQxZ5Im-hP1zM04LaK1GAWoLwW4JPZ
"""

def validar_cpf(cpf):
    # Remover pontos e traço do CPF
    cpf = cpf.replace('.', '').replace('-', '')

    # Verificar se o CPF tem 11 dígitos
    if len(cpf) != 11 or not cpf.isdigit():
        return False

    # Calculando o primeiro dígito verificador
    soma = 0
    multiplicador = 10
    for i in range(9):
        soma += int(cpf[i]) * multiplicador
        multiplicador -= 1

    resto = soma % 11
    if resto < 2:
        digito_verificador_1 = 0
    else:
        digito_verificador_1 = 11 - resto

    # Verificando o primeiro dígito verificador
    if int(cpf[9]) != digito_verificador_1:
        return False

    # Calculando o segundo dígito verificador
    soma = 0
    multiplicador = 11
    for i in range(10):
        soma += int(cpf[i]) * multiplicador
        multiplicador -= 1

    resto = soma % 11
    if resto < 2:
        digito_verificador_2 = 0
    else:
        digito_verificador_2 = 11 - resto

    # Verificando o segundo dígito verificador
    if int(cpf[10]) != digito_verificador_2:
        return False

    # Se passou por todas as verificações, o CPF é válido
    return True

# Solicitar CPF ao usuário
cpf_digitado = input("Digite o CPF no formato XXX.XXX.XXX-XX: ")

# Validar o CPF digitado
if validar_cpf(cpf_digitado):
    print(f"O CPF {cpf_digitado} é válido.")
else:
    print(f"O CPF {cpf_digitado} é inválido.")